$date
	Sat Sep 27 22:52:52 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_eight_bit_CLA $end
$var wire 8 ! Y [7:0] $end
$var wire 1 " Cout $end
$var reg 8 # A [7:0] $end
$var reg 8 $ B [7:0] $end
$var reg 1 % Cin $end
$scope module UUT $end
$var wire 8 & A [7:0] $end
$var wire 8 ' B [7:0] $end
$var wire 1 % Cin $end
$var wire 1 ( VDD $end
$var wire 1 ) VSS $end
$var wire 8 * Y [7:0] $end
$var wire 1 " Cout $end
$scope module UUT $end
$var wire 8 + A [7:0] $end
$var wire 8 , B [7:0] $end
$var wire 1 % Cin $end
$var wire 1 ( VDD $end
$var wire 1 ) VSS $end
$var wire 1 - x $end
$var wire 8 . Y [7:0] $end
$var wire 1 " Cout $end
$scope module C1 $end
$var wire 4 / A [3:0] $end
$var wire 4 0 B [3:0] $end
$var wire 1 % Cin $end
$var wire 1 - Cout $end
$var wire 4 1 S [3:0] $end
$var wire 1 ( VDD $end
$var wire 1 ) VSS $end
$var wire 4 2 Ci [3:0] $end
$upscope $end
$scope module C2 $end
$var wire 4 3 A [3:0] $end
$var wire 4 4 B [3:0] $end
$var wire 1 - Cin $end
$var wire 1 " Cout $end
$var wire 4 5 S [3:0] $end
$var wire 1 ( VDD $end
$var wire 1 ) VSS $end
$var wire 4 6 Ci [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
0-
b0 ,
b0 +
b0 *
0)
1(
b0 '
b0 &
0%
b0 $
b0 #
0"
b0 !
$end
#10000
b11 !
b11 *
b11 .
b11 1
b10 0
b1 /
b10 $
b10 '
b10 ,
b1 #
b1 &
b1 +
#20000
b1 5
b1 6
1-
b11111 !
b11111 *
b11111 .
b1111 1
b1111 2
b1111 0
b1111 /
1%
b1111 $
b1111 '
b1111 ,
b1111 #
b1111 &
b1111 +
#30000
b1100 6
0-
b10010110 !
b10010110 *
b10010110 .
b1001 5
b110 1
b0 2
b10 0
b11 4
b100 /
b110 3
0%
b110010 $
b110010 '
b110010 ,
b1100100 #
b1100100 &
b1100100 +
#40000
